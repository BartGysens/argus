<?php

/**
 * @file
 * Install, update, and uninstall functions for the Aankoopdossiers module.
 */
<?php

/**
 * @file
* Install, update, and uninstall functions for the Aankoopdossiers module.
*/

/**
 * Implementation of hook_install().
 */
function argus_soda_install() {
	// Rebuild and define new content type
	node_types_rebuild ();
	$types = node_type_get_types ();
	
	// Add the body field with specified label
	node_add_body_field ( $types ['lvs_soda'], $label = t ( 'Opmerkingen' ) ); // replace your label or remove if no body-field necessary
	                                                                           
	// Add field bases which are copied from your Features-based module
	                                                                           // More details function argus_soda_field_default_field_bases()
	foreach ( argus_soda_field_default_field_bases () as $field_name => $field ) {
		if (! field_info_field ( $field_name )) {
			field_create_field ( $field );
		}
	}
	
	// Add field instances which are copied from your Features-based module
	// More details function argus_soda_field_default_field_instances()
	foreach ( argus_soda_field_default_field_instances () as $fieldinstance ) {
		field_create_instance ( $fieldinstance );
	}
	
	// Add roles
	if (function_exists ( 'argus_soda_user_default_roles' )) {
		foreach ( argus_soda_user_default_roles () as $role_def ) {
			if (! user_role_load_by_name ( $role_def ['name'] )) {
				$role = new stdClass ();
				$role->name = $role_def ['name'];
				$role->weight = $role_def ['weight'];
				user_role_save ( $role );
			}
		}
	}
	
	// Enable some standard blocks
	$theme = variable_get ( 'theme_default', NULL );
	$blocks = array (
			array (
					'module' => 'views',
					'delta' => '58394210e4ae2d6787067a3715eab8c0', // copy this id from your blocks definition url (/admin/structure/block/manage/views/.../configure)
					'theme' => $theme,
					'status' => 1,
					'weight' => - 10,
					'region' => 'sidebar_first', // replace with the target region for your theme
					'visibility' => BLOCK_VISIBILITY_LISTED,
					'pages' => 'soda/evaluaties' . chr ( 13 ) . 'soda/evaluaties/*', // replace with your list of pages
					'cache' => DRUPAL_CACHE_GLOBAL,
					'title' => 'Filter' 
			) 
	); // replace with your title
	
	foreach ( $blocks as $block ) {
		db_merge ( 'block' )->key ( array (
				'module' => $block ['module'],
				'delta' => $block ['delta'],
				'theme' => $block ['theme'] 
		) )->fields ( array (
				'status' => $block ['status'],
				'weight' => $block ['weight'],
				'region' => $block ['region'],
				'visibility' => $block ['visibility'],
				'pages' => $block ['pages'],
				'cache' => $block ['cache'],
				'title' => $block ['title'] 
		) )->execute ();
	}
	
	if (db_query ( "SHOW TABLES LIKE 'argus_soda_attest'" )->rowCount () == 0) {
		$query = 'CREATE TABLE `argus_soda_attest` (
			  `id` int(6) unsigned NOT NULL AUTO_INCREMENT,
			  `author` int(6) unsigned NOT NULL,
			  `leerling` varchar(100) NOT NULL,
			  `datum` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
			  `attest` varchar(1) NOT NULL DEFAULT 'A',
			  PRIMARY KEY (`id`)
			) ENGINE=InnoDB DEFAULT CHARSET=latin1;';
		$result = db_query ( $query );
	}
}

/**
 * Implementation of hook_uninstall().
 */
function argus_soda_uninstall() {
	$newTypes = array (
			'lvs_soda' 
	);
	
	foreach ( $newTypes as $type ) {
		// Remove all nodes of new content type
		$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
		$result = db_query ( $sql, array (
				':type' => $type 
		) );
		$nodeids = array ();
		foreach ( $result as $row ) {
			$nodeids [] = $row->nid;
		}
		node_delete_multiple ( $nodeids );
	}
	
	// Delete all related fields
	foreach ( argus_soda_field_default_field_bases () as $field_name => $field ) {
		$field_info = field_info_field ( $field_name );
		if (count ( $field_info ['bundles'] ['node'] ) < 2) { // Check if field is enabled for other modules
			field_delete_field ( $field_name );
		}
	}
	
	foreach ( $newTypes as $type ) {
		$instances = field_info_instances ( 'node', $type );
		foreach ( $instances as $instance_name => $fieldinstance ) {
			field_delete_instance ( $fieldinstance );
		}
	}
	
	if (function_exists ( 'argus_soda_field_group_info' )) {
		// Delete all field-groups
		foreach ( argus_soda_field_group_info () as $fieldgroup ) {
			$fieldgroup = field_group_load_field_group_by_identifier ( $fieldgroup->identifier );
			if ($fieldgroup) {
				field_group_group_export_delete ( $fieldgroup );
			}
		}
	}
	
	foreach ( $newTypes as $type ) {
		// Remove new content type
		node_type_delete ( $type );
	}
	
	// Remove roles
	if (function_exists ( 'argus_soda_user_default_roles' )) {
		foreach ( argus_soda_user_default_roles () as $role_def ) {
			user_role_delete ( $role_def ['name'] );
		}
	}
	
	// Remove blocks
	if (db_table_exists ( 'block' )) {
		db_delete ( 'block' )->condition ( 'module', 'argus_soda' )->execute ();
	}
	
	if (db_query ( "SHOW TABLES LIKE 'argus_soda_attest'" )->rowCount ()) {
		$result = db_drop_table ( 'argus_soda_attest' );
	}
}

/**
 * Implements hook_field_default_field_bases().
 *
 * This function is copied from the file generated by the Features module: demo.features.field_base.inc
 */
function argus_soda_field_default_field_bases() {
	$field_bases = array ();
	
	// Exported field_base: 'field_leerling'.
	$field_bases ['field_leerling'] = array (
			'active' => 1,
			'cardinality' => 1,
			'deleted' => 0,
			'entity_types' => array (),
			'field_name' => 'field_leerling',
			'field_permissions' => array (
					'type' => 0 
			),
			'indexes' => array (
					'target_id' => array (
							0 => 'target_id' 
					) 
			),
			'locked' => 0,
			'module' => 'entityreference',
			'settings' => array (
					'handler' => 'views',
					'handler_settings' => array (
							'behaviors' => array (
									'views-select-list' => array (
											'status' => 1 
									) 
							),
							'view' => array (
									'args' => array (),
									'display_name' => 'users_lln',
									'view_name' => 'gebruikers' 
							) 
					),
					'target_type' => 'user' 
			),
			'translatable' => 0,
			'type' => 'entityreference' 
	);
	
	// Exported field_base: 'field_soda_attitude'.
	$field_bases ['field_soda_attitude'] = array (
			'active' => 1,
			'cardinality' => 1,
			'deleted' => 0,
			'entity_types' => array (),
			'field_name' => 'field_soda_attitude',
			'field_permissions' => array (
					'type' => 0 
			),
			'indexes' => array (
					'value' => array (
							0 => 'value' 
					) 
			),
			'locked' => 0,
			'module' => 'list',
			'settings' => array (
					'allowed_values' => array (
							'A' => 'A',
							'B' => 'B' 
					),
					'allowed_values_function' => '' 
			),
			'translatable' => 0,
			'type' => 'list_text' 
	);
	
	// Exported field_base: 'field_soda_discipline'.
	$field_bases ['field_soda_discipline'] = array (
			'active' => 1,
			'cardinality' => 1,
			'deleted' => 0,
			'entity_types' => array (),
			'field_name' => 'field_soda_discipline',
			'field_permissions' => array (
					'type' => 0 
			),
			'indexes' => array (
					'value' => array (
							0 => 'value' 
					) 
			),
			'locked' => 0,
			'module' => 'list',
			'settings' => array (
					'allowed_values' => array (
							'A' => 'A',
							'B' => 'B' 
					),
					'allowed_values_function' => '' 
			),
			'translatable' => 0,
			'type' => 'list_text' 
	);
	
	// Exported field_base: 'field_soda_orde'.
	$field_bases ['field_soda_orde'] = array (
			'active' => 1,
			'cardinality' => 1,
			'deleted' => 0,
			'entity_types' => array (),
			'field_name' => 'field_soda_orde',
			'field_permissions' => array (
					'type' => 0 
			),
			'indexes' => array (
					'value' => array (
							0 => 'value' 
					) 
			),
			'locked' => 0,
			'module' => 'list',
			'settings' => array (
					'allowed_values' => array (
							'A' => 'A',
							'B' => 'B' 
					),
					'allowed_values_function' => '' 
			),
			'translatable' => 0,
			'type' => 'list_text' 
	);
	
	// Exported field_base: 'field_soda_periode'.
	$field_bases ['field_soda_periode'] = array (
			'active' => 1,
			'cardinality' => 1,
			'deleted' => 0,
			'entity_types' => array (),
			'field_name' => 'field_soda_periode',
			'field_permissions' => array (
					'type' => 0 
			),
			'indexes' => array (
					'value' => array (
							0 => 'value' 
					) 
			),
			'locked' => 0,
			'module' => 'list',
			'settings' => array (
					'allowed_values' => array (
							'D1' => 'D1',
							'D2' => 'D2',
							'D3' => 'D3',
							'D4' => 'D4' 
					),
					'allowed_values_function' => '' 
			),
			'translatable' => 0,
			'type' => 'list_text' 
	);
	
	// Exported field_base: 'field_soda_stiptheid'.
	$field_bases ['field_soda_stiptheid'] = array (
			'active' => 1,
			'cardinality' => 1,
			'deleted' => 0,
			'entity_types' => array (),
			'field_name' => 'field_soda_stiptheid',
			'field_permissions' => array (
					'type' => 0 
			),
			'indexes' => array (
					'value' => array (
							0 => 'value' 
					) 
			),
			'locked' => 0,
			'module' => 'list',
			'settings' => array (
					'allowed_values' => array (
							'A' => 'A',
							'B' => 'B' 
					),
					'allowed_values_function' => '' 
			),
			'translatable' => 0,
			'type' => 'list_text' 
	);
	
	return $field_bases;
}

/**
 * Implements hook_field_default_field_instances().
 *
 * This function is copied from the file generated by the Features module: demo.features.field_base.inc
 */
function argus_soda_field_default_field_instances() {
	$field_instances = array ();
	
	// Exported field_instance: 'node-lvs_soda-field_leerling'.
	$field_instances ['node-lvs_soda-field_leerling'] = array (
			'bundle' => 'lvs_soda',
			'default_value' => NULL,
			'deleted' => 0,
			'description' => '',
			'display' => array (
					'default' => array (
							'label' => 'inline',
							'module' => 'entityreference',
							'settings' => array (
									'bypass_access' => FALSE,
									'conditions' => array (),
									'link' => FALSE 
							),
							'type' => 'entityreference_label',
							'weight' => 0 
					),
					'teaser' => array (
							'label' => 'above',
							'settings' => array (),
							'type' => 'hidden',
							'weight' => 0 
					) 
			),
			'entity_type' => 'node',
			'field_name' => 'field_leerling',
			'label' => 'Leerling',
			'required' => 1,
			'settings' => array (
					'user_register_form' => FALSE 
			),
			'widget' => array (
					'active' => 1,
					'module' => 'entityreference',
					'settings' => array (
							'match_operator' => 'CONTAINS',
							'path' => '',
							'size' => 60 
					),
					'type' => 'entityreference_autocomplete',
					'weight' => 0 
			) 
	);
	
	// Exported field_instance: 'node-lvs_soda-field_soda_attitude'.
	$field_instances ['node-lvs_soda-field_soda_attitude'] = array (
			'bundle' => 'lvs_soda',
			'default_value' => array (
					0 => array (
							'value' => 'A' 
					) 
			),
			'deleted' => 0,
			'description' => 'Niet duidelijk meetbaar, discussie is mogelijk. (Afhankelijk van de individuele lesstijl/afspraken van de leerkracht.)<br />
<br />
<strong>Positieve attitude</strong><br />
Teamwork, Goede houding op de stageplaats, Beleefdheid, Gemotiveerd meewerken in de les, gedrevenheid, Behulpzaamheid, Samenwerken, Flexibiliteit, Collegialiteit, verdraagzaamheid, Zelfstandigheid, Leren uit fouten, Respect<br />
Meerderheid Klassenraad beslist over een <u>A-score</u><br />
<br />
<strong>Negatieve attitude</strong><br />
Pesten, Onbeleefdheid, Egoïstisch, Opstandig, Betweterig, eigengereid, koppigheid, Arrogantie, Passiviteit, Ongeïnteresseerdheid, Niet leren uit fouten, Onverdraagzaamheid, Geen respect<br />
Per werkpuntje waar de leerling niet goed op scoort dient de meerderheid van de Klassenraad hier akkoord mee te gaan. Resultaat = <u>B-score + feedback</u>',
			'display' => array (
					'default' => array (
							'label' => 'inline',
							'module' => 'list',
							'settings' => array (
									'conditions' => array () 
							),
							'type' => 'list_default',
							'weight' => 5 
					),
					'teaser' => array (
							'label' => 'above',
							'settings' => array (),
							'type' => 'hidden',
							'weight' => 0 
					) 
			),
			'entity_type' => 'node',
			'field_name' => 'field_soda_attitude',
			'label' => 'Attitude',
			'required' => 1,
			'settings' => array (
					'user_register_form' => FALSE 
			),
			'widget' => array (
					'active' => 1,
					'module' => 'options',
					'settings' => array (),
					'type' => 'options_buttons',
					'weight' => 10 
			) 
	);
	
	// Exported field_instance: 'node-lvs_soda-field_soda_discipline'.
	$field_instances ['node-lvs_soda-field_soda_discipline'] = array (
			'bundle' => 'lvs_soda',
			'default_value' => array (
					0 => array (
							'value' => 'A' 
					) 
			),
			'deleted' => 0,
			'description' => '<strong>Taken niet uitvoeren waar ze niet van houden</strong>. Voorbeelden hiervan zijn: opkuisen, straftaken schrijven/uitvoeren, negeren van een leerkracht,...<br />
<strong>Discipline</strong> is het zich <strong>houden aan afspraken</strong>, zoals ze in het <strong>schoolreglement</strong> én/of de <strong>schoolagenda</strong> beschreven staan. Meldingen dat een leerling zich hier duidelijk niet kan aan houden leiden tot een <u>B-score</u>. Voorbeelden hiervan kunnen zijn: Vechten, bedreigen, Roken, Weglopen (uit de les),Uitschelden, beledigen, weigeren een straftaak/strafstudie uit te voeren, Vandalisme, Diefstal, enz...<br />
Een goede <strong>arbeidsdiscipline</strong> is niet alleen belangrijk om later een <strong>professionele vakman</strong> te worden, het is ook essentieel om te zorgen voor meer <strong>veiligheid op de werkvloer</strong>. Indien er meldingen zijn dan geeft dit een <u>B-score</u> met feedback.',
			'display' => array (
					'default' => array (
							'label' => 'inline',
							'module' => 'list',
							'settings' => array (
									'conditions' => array () 
							),
							'type' => 'list_default',
							'weight' => 4 
					),
					'teaser' => array (
							'label' => 'above',
							'settings' => array (),
							'type' => 'hidden',
							'weight' => 0 
					) 
			),
			'entity_type' => 'node',
			'field_name' => 'field_soda_discipline',
			'label' => 'Discipline',
			'required' => 1,
			'settings' => array (
					'user_register_form' => FALSE 
			),
			'widget' => array (
					'active' => 1,
					'module' => 'options',
					'settings' => array (),
					'type' => 'options_buttons',
					'weight' => 9 
			) 
	);
	
	// Exported field_instance: 'node-lvs_soda-field_soda_orde'.
	$field_instances ['node-lvs_soda-field_soda_orde'] = array (
			'bundle' => 'lvs_soda',
			'default_value' => array (
					0 => array (
							'value' => 'A' 
					) 
			),
			'deleted' => 0,
			'description' => '<strong>Minstens 2 leerkrachten</strong> melden het <strong>herhaaldelijk niet in orde zijn van een leerling</strong>; dit resulteert in een <u>B-score</u>.',
			'display' => array (
					'default' => array (
							'label' => 'inline',
							'module' => 'list',
							'settings' => array (
									'conditions' => array () 
							),
							'type' => 'list_default',
							'weight' => 3 
					),
					'teaser' => array (
							'label' => 'above',
							'settings' => array (),
							'type' => 'hidden',
							'weight' => 0 
					) 
			),
			'entity_type' => 'node',
			'field_name' => 'field_soda_orde',
			'label' => 'Orde',
			'required' => 1,
			'settings' => array (
					'user_register_form' => FALSE 
			),
			'widget' => array (
					'active' => 1,
					'module' => 'options',
					'settings' => array (),
					'type' => 'options_buttons',
					'weight' => 8 
			) 
	);
	
	// Exported field_instance: 'node-lvs_soda-field_soda_periode'.
	$field_instances ['node-lvs_soda-field_soda_periode'] = array (
			'bundle' => 'lvs_soda',
			'default_value' => NULL,
			'deleted' => 0,
			'description' => '',
			'display' => array (
					'default' => array (
							'label' => 'inline',
							'module' => 'list',
							'settings' => array (
									'conditions' => array () 
							),
							'type' => 'list_default',
							'weight' => 1 
					),
					'teaser' => array (
							'label' => 'above',
							'settings' => array (),
							'type' => 'hidden',
							'weight' => 0 
					) 
			),
			'entity_type' => 'node',
			'field_name' => 'field_soda_periode',
			'label' => 'Periode',
			'required' => 1,
			'settings' => array (
					'user_register_form' => FALSE 
			),
			'widget' => array (
					'active' => 1,
					'module' => 'options',
					'settings' => array (),
					'type' => 'options_buttons',
					'weight' => 1 
			) 
	);
	
	// Exported field_instance: 'node-lvs_soda-field_soda_stiptheid'.
	$field_instances ['node-lvs_soda-field_soda_stiptheid'] = array (
			'bundle' => 'lvs_soda',
			'default_value' => array (
					0 => array (
							'value' => 'A' 
					) 
			),
			'deleted' => 0,
			'description' => 'Indien de leerling <strong>meer dan twee keer te laat</strong> komt zonder gewettigde reden, krijgt hij voor die periode een <u>B-score</u>.
Van zodra de leerling <strong>meer dan 2 lesuren (na elkaar) mist</strong> betekent dit ook een <u>B-score</u>.',
			'display' => array (
					'default' => array (
							'label' => 'inline',
							'module' => 'list',
							'settings' => array (
									'conditions' => array () 
							),
							'type' => 'list_default',
							'weight' => 2 
					),
					'teaser' => array (
							'label' => 'above',
							'settings' => array (),
							'type' => 'hidden',
							'weight' => 0 
					) 
			),
			'entity_type' => 'node',
			'field_name' => 'field_soda_stiptheid',
			'label' => 'Stiptheid',
			'required' => 1,
			'settings' => array (
					'user_register_form' => FALSE 
			),
			'widget' => array (
					'active' => 1,
					'module' => 'options',
					'settings' => array (
							'apply_chosen' => '' 
					),
					'type' => 'options_buttons',
					'weight' => 7 
			) 
	);
	
	// Translatables
	// Included for use with string extractors like potx.
	t ( 'Attitude' );
	t ( 'Discipline' );
	t ( 'Indien de leerling <strong>meer dan twee keer te laat</strong> komt zonder gewettigde reden, krijgt hij voor die periode een <u>B-score</u>.
Van zodra de leerling <strong>meer dan 2 lesuren (na elkaar) mist</strong> betekent dit ook een <u>B-score</u>.' );
	t ( 'Leerling' );
	t ( '<strong>Minstens 2 leerkrachten</strong> melden het <strong>herhaaldelijk niet in orde zijn van een leerling</strong>; dit resulteert in een <u>B-score</u>.' );
	t ( 'Niet duidelijk meetbaar, discussie is mogelijk. (Afhankelijk van de individuele lesstijl/afspraken van de leerkracht.)<br />
<br />
<strong>Positieve attitude</strong><br />
Teamwork, Goede houding op de stageplaats, Beleefdheid, Gemotiveerd meewerken in de les, gedrevenheid, Behulpzaamheid, Samenwerken, Flexibiliteit, Collegialiteit, verdraagzaamheid, Zelfstandigheid, Leren uit fouten, Respect<br />
Meerderheid Klassenraad beslist over een <u>A-score</u><br />
<br />
<strong>Negatieve attitude</strong><br />
Pesten, Onbeleefdheid, Egoïstisch, Opstandig, Betweterig, eigengereid, koppigheid, Arrogantie, Passiviteit, Ongeïnteresseerdheid, Niet leren uit fouten, Onverdraagzaamheid, Geen respect<br />
Per werkpuntje waar de leerling niet goed op scoort dient de meerderheid van de Klassenraad hier akkoord mee te gaan. Resultaat = <u>B-score + feedback</u>' );
	t ( 'Opmerkingen' );
	t ( 'Orde' );
	t ( 'Periode' );
	t ( 'Stiptheid' );
	t ( '<strong>Taken niet uitvoeren waar ze niet van houden</strong>. Voorbeelden hiervan zijn: opkuisen, straftaken schrijven/uitvoeren, negeren van een leerkracht,...<br />
<strong>Discipline</strong> is het zich <strong>houden aan afspraken</strong>, zoals ze in het <strong>schoolreglement</strong> én/of de <strong>schoolagenda</strong> beschreven staan. Meldingen dat een leerling zich hier duidelijk niet kan aan houden leiden tot een <u>B-score</u>. Voorbeelden hiervan kunnen zijn: Vechten, bedreigen, Roken, Weglopen (uit de les),Uitschelden, beledigen, weigeren een straftaak/strafstudie uit te voeren, Vandalisme, Diefstal, enz...<br />
Een goede <strong>arbeidsdiscipline</strong> is niet alleen belangrijk om later een <strong>professionele vakman</strong> te worden, het is ook essentieel om te zorgen voor meer <strong>veiligheid op de werkvloer</strong>. Indien er meldingen zijn dan geeft dit een <u>B-score</u> met feedback.' );
	
	return $field_instances;
}

